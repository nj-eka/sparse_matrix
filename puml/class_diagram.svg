<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="986px" preserveAspectRatio="none" style="width:1110px;height:986px;background:#FFFFFF;" version="1.1" viewBox="0 0 1110 986" width="1110px" zoomAndPan="magnify"><defs/><g><!--MD5=[ecba8816d563dd25b63df65e9d66b7e7]
class C_0002212443975218405385--><g id="elem_C_0002212443975218405385"><rect codeLine="3" fill="#F1F1F1" height="96.2959" id="C_0002212443975218405385" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="521" x="7" y="750.12"/><ellipse cx="86.25" cy="766.12" fill="#A9DCDF" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M91.4531,770.62 L89.0156,770.62 L88.25,767.8856 L84.4688,767.8856 L83.7031,770.62 L81.25,770.62 L84.9219,759.4169 L87.7813,759.4169 L91.4531,770.62 Z M86.3594,760.9325 Q86.2813,761.2763 86.1094,761.9794 Q85.9375,762.6669 84.9844,766.0419 L87.7344,766.0419 Q86.7656,762.62 86.5938,761.9481 Q86.4219,761.2763 86.3594,760.9325 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="182" x="106.75" y="771.2025">sparse::details::CellAccessor</text><rect fill="#FFFFFF" height="15.7988" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="170" x="361" y="747.12"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="168" x="362" y="759.3759">std::copyable T,size_t N_DIMS</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="527" y1="782.12" y2="782.12"/><ellipse cx="18" cy="795.6693" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="443" x="27" y="799.2518">get(IndexTypeConstShared&lt;N_DIMS&gt;) const noexcept = 0 : const T &amp;</text><ellipse cx="18" cy="811.7679" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="495" x="27" y="815.3505">set(IndexTypeConstShared&lt;N_DIMS&gt; idx, const T &amp; value) noexcept = 0 : void</text><ellipse cx="18" cy="827.8666" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="466" x="27" y="831.4491">set(IndexTypeConstShared&lt;N_DIMS&gt; idx, T &amp;&amp; value) noexcept = 0 : void</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="527" y1="838.4159" y2="838.4159"/></g><!--MD5=[3600e43b9bad103d020661441e62d18b]
class C_0000419081589640496338--><g id="elem_C_0000419081589640496338"><rect codeLine="14" fill="#F1F1F1" height="48" id="C_0000419081589640496338" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="274" x="396.5" y="508.38"/><ellipse cx="411.5" cy="524.38" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M409.4063,524.2238 Q409.4063,526.0988 409.9844,527.1144 Q410.5625,528.1144 411.7188,528.1144 Q413.0625,528.1144 413.7188,526.0988 L415.9844,526.5206 Q414.875,530.0519 411.7031,530.0519 Q409.3594,530.0519 408.1406,528.5675 Q406.9219,527.0831 406.9219,524.2238 Q406.9219,518.505 411.625,518.505 Q413.1719,518.505 414.2031,519.3175 Q415.25,520.13 415.75,521.7394 L413.4844,522.2863 Q413.25,521.4113 412.7656,520.9269 Q412.2813,520.4269 411.6563,520.4269 Q409.4063,520.4269 409.4063,524.2238 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="182" x="425.5" y="529.4625">sparse::details::CellAccessor</text><rect fill="#FFFFFF" height="15.7988" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="58" x="615.5" y="505.38"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="56" x="616.5" y="517.6359">T,N_DIMS</text><line style="stroke:#181818;stroke-width:0.5;" x1="397.5" x2="669.5" y1="540.38" y2="540.38"/><line style="stroke:#181818;stroke-width:0.5;" x1="397.5" x2="669.5" y1="548.38" y2="548.38"/></g><!--MD5=[cfc8598872cfea930e70d44f4b65979c]
class C_0000136384432202654581--><g id="elem_C_0000136384432202654581"><rect codeLine="19" fill="#F1F1F1" height="160.5918" id="C_0000136384432202654581" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="597" x="502" y="271.79"/><ellipse cx="599.25" cy="287.79" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M597.1563,287.6337 Q597.1563,289.5087 597.7344,290.5244 Q598.3125,291.5244 599.4688,291.5244 Q600.8125,291.5244 601.4688,289.5087 L603.7344,289.9306 Q602.625,293.4619 599.4531,293.4619 Q597.1094,293.4619 595.8906,291.9775 Q594.6719,290.4931 594.6719,287.6337 Q594.6719,281.915 599.375,281.915 Q600.9219,281.915 601.9531,282.7275 Q603,283.54 603.5,285.1494 L601.2344,285.6962 Q601,284.8212 600.5156,284.3369 Q600.0313,283.8369 599.4063,283.8369 Q597.1563,283.8369 597.1563,287.6337 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161" x="619.75" y="292.8725">sparse::details::ShiftIndex</text><rect fill="#FFFFFF" height="15.7988" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="231" x="871" y="268.79"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="229" x="872" y="281.0459">std::copyable T,size_t N_DIMS,size_t DIM</text><line style="stroke:#181818;stroke-width:0.5;" x1="503" x2="1098" y1="303.79" y2="303.79"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="510" y="314.3393"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="571" x="522" y="320.9218">ShiftIndex(CellAccessor&lt;T,N_DIMS&gt; * cell, IndexTypeShared&lt;N_DIMS&gt; idx) noexcept : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="510" y="330.4379"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="391" x="522" y="337.0205">ShiftIndex(const ShiftIndex&lt;T,N_DIMS,DIM&gt; &amp;) = deleted : void</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="503" x2="1098" y1="343.9873" y2="343.9873"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="510" y="354.5366"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="547" x="522" y="361.1191">operator=(const ShiftIndex&lt;T,N_DIMS,DIM&gt; &amp;) = deleted : ShiftIndex&lt;T,N_DIMS,DIM&gt; &amp;</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="503" x2="1098" y1="368.0859" y2="368.0859"/><ellipse cx="513" cy="381.6352" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="260" x="522" y="385.2177">operator[](size_t last_idx) noexcept : auto</text><line style="stroke:#181818;stroke-width:0.5;" x1="503" x2="1098" y1="392.1845" y2="392.1845"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="510" y="402.7338"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="211" x="522" y="409.3164">_cell : CellAccessor&lt;T,N_DIMS&gt; *</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="510" y="418.8325"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="252" x="522" y="425.415">_idx : const IndexTypeShared&lt;N_DIMS&gt;</text></g><!--MD5=[9ec17c4db6406765bfc3f0a8c2f5070f]
class C_0002263803576604671280--><g id="elem_C_0002263803576604671280"><rect codeLine="38" fill="#F1F1F1" height="200.7891" id="C_0002263803576604671280" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="853" x="19" y="10"/><ellipse cx="306.25" cy="26" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M304.1563,25.8438 Q304.1563,27.7188 304.7344,28.7344 Q305.3125,29.7344 306.4688,29.7344 Q307.8125,29.7344 308.4688,27.7188 L310.7344,28.1406 Q309.625,31.6719 306.4531,31.6719 Q304.1094,31.6719 302.8906,30.1875 Q301.6719,28.7031 301.6719,25.8438 Q301.6719,20.125 306.375,20.125 Q307.9219,20.125 308.9531,20.9375 Q310,21.75 310.5,23.3594 L308.2344,23.9063 Q308,23.0313 307.5156,22.5469 Q307.0313,22.0469 306.4063,22.0469 Q304.1563,22.0469 304.1563,25.8438 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161" x="326.75" y="31.0825">sparse::details::ShiftIndex</text><rect fill="#FFFFFF" height="15.7988" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="107" x="768" y="7"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="105" x="769" y="19.2559">T,N_DIMS,N_DIMS</text><line style="stroke:#181818;stroke-width:0.5;" x1="20" x2="871" y1="42" y2="42"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="27" y="52.5493"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="571" x="39" y="59.1318">ShiftIndex(CellAccessor&lt;T,N_DIMS&gt; * cell, IndexTypeShared&lt;N_DIMS&gt; idx) noexcept : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="27" y="68.6479"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="531" x="39" y="75.2305">ShiftIndex(const ShiftIndex&lt;type-parameter-0-0,N_DIMS,N_DIMS&gt; &amp;) = deleted : void</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="20" x2="871" y1="82.1973" y2="82.1973"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="27" y="92.7466"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="827" x="39" y="99.3291">operator=(const ShiftIndex&lt;type-parameter-0-0,N_DIMS,N_DIMS&gt; &amp;) = deleted : ShiftIndex&lt;type-parameter-0-0,N_DIMS,N_DIMS&gt; &amp;</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="20" x2="871" y1="106.2959" y2="106.2959"/><ellipse cx="30" cy="119.8452" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="255" x="39" y="123.4277">operator=(T &amp;&amp; value) noexcept : auto &amp;</text><ellipse cx="30" cy="135.9438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="284" x="39" y="139.5264">operator=(const T &amp; value) noexcept : auto &amp;</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="20" x2="871" y1="146.4932" y2="146.4932"/><ellipse cx="30" cy="160.0425" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="311" x="39" y="163.625">operator type-parameter-0-0() const noexcept : T</text><line style="stroke:#181818;stroke-width:0.5;" x1="20" x2="871" y1="170.5918" y2="170.5918"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="27" y="181.1411"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="211" x="39" y="187.7236">_cell : CellAccessor&lt;T,N_DIMS&gt; *</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="27" y="197.2397"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="289" x="39" y="203.8223">_idx : const IndexTypeConstShared&lt;N_DIMS&gt;</text></g><!--MD5=[1b842457dc546f603a6a5254a5e087cf]
class C_0000163967524215595475--><g id="elem_C_0000163967524215595475"><rect codeLine="62" fill="#F1F1F1" height="361.7754" id="C_0000163967524215595475" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="475" x="563" y="617.38"/><ellipse cx="659.25" cy="633.38" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M657.1563,633.2238 Q657.1563,635.0988 657.7344,636.1144 Q658.3125,637.1144 659.4688,637.1144 Q660.8125,637.1144 661.4688,635.0988 L663.7344,635.5206 Q662.625,639.0519 659.4531,639.0519 Q657.1094,639.0519 655.8906,637.5675 Q654.6719,636.0831 654.6719,633.2238 Q654.6719,627.505 659.375,627.505 Q660.9219,627.505 661.9531,628.3175 Q663,629.13 663.5,630.7394 L661.2344,631.2863 Q661,630.4113 660.5156,629.9269 Q660.0313,629.4269 659.4063,629.4269 Q657.1563,629.4269 657.1563,633.2238 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="679.75" y="638.4625">sparse::Matrix</text><rect fill="#FFFFFF" height="15.7988" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" width="184" x="857" y="614.38"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="182" x="858" y="626.6359">std::copyable T,size_t N_DIMS=2</text><line style="stroke:#181818;stroke-width:0.5;" x1="564" x2="1037" y1="649.38" y2="649.38"/><ellipse cx="574" cy="662.9293" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="295" x="583" y="666.5118">Matrix(const T &amp; default_value) noexcept : void</text><ellipse cx="574" cy="679.0279" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="301" x="583" y="682.6105">Matrix(T &amp;&amp; default_value = T{}) noexcept : void</text><ellipse cx="574" cy="695.1266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="289" x="583" y="698.7091">Matrix(const Matrix&lt;T,N_DIMS&gt; &amp; other) : void</text><ellipse cx="574" cy="711.2252" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="260" x="583" y="714.8077">Matrix(Matrix&lt;T,N_DIMS&gt; &amp;&amp; other) : void</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="564" x2="1037" y1="721.7745" y2="721.7745"/><ellipse cx="574" cy="735.3238" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="417" x="583" y="738.9064">operator=(const Matrix&lt;T,N_DIMS&gt; &amp; other) : Matrix&lt;T,N_DIMS&gt; &amp;</text><ellipse cx="574" cy="751.4225" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="449" x="583" y="755.005">operator=(Matrix&lt;T,N_DIMS&gt; &amp;&amp; other) noexcept : Matrix&lt;T,N_DIMS&gt; &amp;</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="564" x2="1037" y1="761.9718" y2="761.9718"/><ellipse cx="574" cy="775.5211" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177" x="583" y="779.1036">operator[](size_t idx1) : auto</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="564" x2="1037" y1="786.0704" y2="786.0704"/><ellipse cx="574" cy="799.6197" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="243" x="583" y="803.2023">begin() const noexcept : const_iterator</text><ellipse cx="574" cy="815.7184" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="250" x="583" y="819.3009">cbegin() const noexcept : const_iterator</text><ellipse cx="574" cy="831.817" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="239" x="583" y="835.3995">cend() const noexcept : const_iterator</text><ellipse cx="574" cy="847.9156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="232" x="583" y="851.4982">end() const noexcept : const_iterator</text><ellipse cx="574" cy="864.0143" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="370" x="583" y="867.5968">get(IndexTypeConstShared idx) const noexcept : const T &amp;</text><ellipse cx="574" cy="880.1129" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="403" x="583" y="883.6954">set(IndexTypeConstShared idx, const T &amp; value) noexcept : void</text><ellipse cx="574" cy="896.2115" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="374" x="583" y="899.7941">set(IndexTypeConstShared idx, T &amp;&amp; value) noexcept : void</text><ellipse cx="574" cy="912.3102" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="583" y="915.8927">size() const noexcept : size_t</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="571" y="925.4088"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="316" x="583" y="931.9913">swap(Matrix&lt;T,N_DIMS&gt; &amp;&amp; other) noexcept : void</text><line style="stroke:#181818;stroke-width:0.5;" x1="564" x2="1037" y1="938.9581" y2="938.9581"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="571" y="949.5074"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="583" y="956.09">_default : T</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="571" y="965.6061"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="195" x="583" y="972.1886">_map : std::map&lt;IndexType,T&gt;</text></g><!--MD5=[62652b9baf78e1eab4d1f6f3bfbac7ae]
link C_0000419081589640496338 to C_0002212443975218405385--><g id="link_C_0000419081589640496338_C_0002212443975218405385"><path codeLine="104" d="M509.89,556.8 C469.92,596.46 387.64,678.09 330.08,735.19 " fill="none" id="C_0000419081589640496338-to-C_0002212443975218405385" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="335.42,739.75,316.29,748.86,325.56,729.81,335.42,739.75" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[7b8874d742c8a85730d75b410f217d0c]
link C_0000136384432202654581 to C_0000419081589640496338--><g id="link_C_0000136384432202654581_C_0000419081589640496338"><path codeLine="105" d="M681.06,432.85 C642.34,458.71 602.02,485.63 573.34,504.78 " fill="none" id="C_0000136384432202654581-to-C_0000419081589640496338" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="569.48,508.03,579.1833,506.3428,573.6337,505.2466,574.7299,499.697,569.48,508.03" style="stroke:#181818;stroke-width:1.0;"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="637.5" y="468.3544"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="27" x="647.5" y="475.5738">_cell</text></g><!--MD5=[6b0b181fc2d32eec1f770e7e4f56d0c3]
link C_0002263803576604671280 to C_0000419081589640496338--><g id="link_C_0002263803576604671280_C_0000419081589640496338"><path codeLine="106" d="M426.49,210.99 C418.43,276.15 416.27,361.95 443.5,432.38 C454.48,460.78 477.81,486.06 497.97,503.96 " fill="none" id="C_0002263803576604671280-to-C_0000419081589640496338" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="501.48,507.89,497.3216,498.9621,497.71,504.6056,492.0665,504.994,501.48,507.89" style="stroke:#181818;stroke-width:1.0;"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="446.5" y="350.0644"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="27" x="456.5" y="357.2838">_cell</text></g><!--MD5=[c849ad29985a55a247813c3644cc4b0b]
link C_0002263803576604671280 to C_0000136384432202654581--><g id="link_C_0002263803576604671280_C_0000136384432202654581"><path codeLine="107" d="M593.22,211.14 C617.08,227.25 641.68,243.86 665.22,259.75 " fill="none" id="C_0002263803576604671280-to-C_0000136384432202654581" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="668.92,254.47,681.57,271.47,661.08,266.08,668.92,254.47" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[e5741efe1b6ad03f6de4a12370ae5783]
reverse link C_0000419081589640496338 to C_0000163967524215595475--><g id="link_C_0000419081589640496338_C_0000163967524215595475"><path codeLine="108" d="M572,571.44 C585.28,584.56 601.15,600.24 618.26,617.15 " fill="none" id="C_0000419081589640496338-backto-C_0000163967524215595475" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="567.5,576.84,558.19,557.8,577.34,566.88,567.5,576.84" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[1f3783defb37299f79de8e8988634c0f]
@startuml
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:30
abstract "sparse::details::CellAccessor<std::copyable T,size_t N_DIMS>" as C_0002212443975218405385
abstract C_0002212443975218405385 {
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:31
{abstract} +get(IndexTypeConstShared<N_DIMS>) const noexcept = 0 : const T &
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:32
{abstract} +set(IndexTypeConstShared<N_DIMS> idx, const T & value) noexcept = 0 : void
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:34
{abstract} +set(IndexTypeConstShared<N_DIMS> idx, T && value) noexcept = 0 : void
__
}
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:30
class "sparse::details::CellAccessor<T,N_DIMS>" as C_0000419081589640496338
class C_0000419081589640496338 {
__
}
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:39
class "sparse::details::ShiftIndex<std::copyable T,size_t N_DIMS,size_t DIM>" as C_0000136384432202654581
class C_0000136384432202654581 {
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:46
-ShiftIndex(CellAccessor<T,N_DIMS> * cell, IndexTypeShared<N_DIMS> idx) noexcept : void
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:48
-ShiftIndex(const ShiftIndex<T,N_DIMS,DIM> &) = deleted : void
..
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:49
-operator=(const ShiftIndex<T,N_DIMS,DIM> &) = deleted : ShiftIndex<T,N_DIMS,DIM> &
..
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:55
+operator[](size_t last_idx) noexcept : auto
__
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:43
-_cell : CellAccessor<T,N_DIMS> *
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:44
-_idx : const IndexTypeShared<N_DIMS>
}
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:62
class "sparse::details::ShiftIndex<T,N_DIMS,N_DIMS>" as C_0002263803576604671280
class C_0002263803576604671280 {
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:68
-ShiftIndex(CellAccessor<T,N_DIMS> * cell, IndexTypeShared<N_DIMS> idx) noexcept : void
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:70
-ShiftIndex(const ShiftIndex<type-parameter-0-0,N_DIMS,N_DIMS> &) = deleted : void
..
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:71
-operator=(const ShiftIndex<type-parameter-0-0,N_DIMS,N_DIMS> &) = deleted : ShiftIndex<type-parameter-0-0,N_DIMS,N_DIMS> &
..
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:78
+operator=(T && value) noexcept : auto &
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:82
+operator=(const T & value) noexcept : auto &
..
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:77
+operator type-parameter-0-0() const noexcept : T
__
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:65
-_cell : CellAccessor<T,N_DIMS> *
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:66
-_idx : const IndexTypeConstShared<N_DIMS>
}
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:91
class "sparse::Matrix<std::copyable T,size_t N_DIMS=2>" as C_0000163967524215595475
class C_0000163967524215595475 {
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:111
+Matrix(const T & default_value) noexcept : void
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:112
+Matrix(T && default_value = T{}) noexcept : void
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:114
+Matrix(const Matrix<T,N_DIMS> & other) : void
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:115
+Matrix(Matrix<T,N_DIMS> && other) : void
..
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:118
+operator=(const Matrix<T,N_DIMS> & other) : Matrix<T,N_DIMS> &
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:125
+operator=(Matrix<T,N_DIMS> && other) noexcept : Matrix<T,N_DIMS> &
..
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:158
+operator[](size_t idx1) : auto
..
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:167
+begin() const noexcept : const_iterator
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:169
+cbegin() const noexcept : const_iterator
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:170
+cend() const noexcept : const_iterator
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:168
+end() const noexcept : const_iterator
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:131
+get(IndexTypeConstShared idx) const noexcept : const T &
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:138
+set(IndexTypeConstShared idx, const T & value) noexcept : void
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:146
+set(IndexTypeConstShared idx, T && value) noexcept : void
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:164
+size() const noexcept : size_t
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:104
-swap(Matrix<T,N_DIMS> && other) noexcept : void
__
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:102
-_default : T
' /home/jn/codes/cpp/otus23/sparse_matrix/src/sparse/matrix.hpp:101
-_map : std::map<IndexType,T>
}
C_0000419081589640496338 ..|> C_0002212443975218405385
C_0000136384432202654581 - -> C_0000419081589640496338 : -_cell
C_0002263803576604671280 - -> C_0000419081589640496338 : -_cell
C_0002263803576604671280 ..|> C_0000136384432202654581
C_0000419081589640496338 <|- - C_0000163967524215595475

'Generated with clang-uml, version 0.3.8
'LLVM version clang version 16.0.6
@enduml

@startuml
abstract "sparse::details::CellAccessor<std::copyable T,size_t N_DIMS>" as C_0002212443975218405385
abstract C_0002212443975218405385 {
{abstract} +get(IndexTypeConstShared<N_DIMS>) const noexcept = 0 : const T &
{abstract} +set(IndexTypeConstShared<N_DIMS> idx, const T & value) noexcept = 0 : void
{abstract} +set(IndexTypeConstShared<N_DIMS> idx, T && value) noexcept = 0 : void
__
}
class "sparse::details::CellAccessor<T,N_DIMS>" as C_0000419081589640496338
class C_0000419081589640496338 {
__
}
class "sparse::details::ShiftIndex<std::copyable T,size_t N_DIMS,size_t DIM>" as C_0000136384432202654581
class C_0000136384432202654581 {
-ShiftIndex(CellAccessor<T,N_DIMS> * cell, IndexTypeShared<N_DIMS> idx) noexcept : void
-ShiftIndex(const ShiftIndex<T,N_DIMS,DIM> &) = deleted : void
..
-operator=(const ShiftIndex<T,N_DIMS,DIM> &) = deleted : ShiftIndex<T,N_DIMS,DIM> &
..
+operator[](size_t last_idx) noexcept : auto
__
-_cell : CellAccessor<T,N_DIMS> *
-_idx : const IndexTypeShared<N_DIMS>
}
class "sparse::details::ShiftIndex<T,N_DIMS,N_DIMS>" as C_0002263803576604671280
class C_0002263803576604671280 {
-ShiftIndex(CellAccessor<T,N_DIMS> * cell, IndexTypeShared<N_DIMS> idx) noexcept : void
-ShiftIndex(const ShiftIndex<type-parameter-0-0,N_DIMS,N_DIMS> &) = deleted : void
..
-operator=(const ShiftIndex<type-parameter-0-0,N_DIMS,N_DIMS> &) = deleted : ShiftIndex<type-parameter-0-0,N_DIMS,N_DIMS> &
..
+operator=(T && value) noexcept : auto &
+operator=(const T & value) noexcept : auto &
..
+operator type-parameter-0-0() const noexcept : T
__
-_cell : CellAccessor<T,N_DIMS> *
-_idx : const IndexTypeConstShared<N_DIMS>
}
class "sparse::Matrix<std::copyable T,size_t N_DIMS=2>" as C_0000163967524215595475
class C_0000163967524215595475 {
+Matrix(const T & default_value) noexcept : void
+Matrix(T && default_value = T{}) noexcept : void
+Matrix(const Matrix<T,N_DIMS> & other) : void
+Matrix(Matrix<T,N_DIMS> && other) : void
..
+operator=(const Matrix<T,N_DIMS> & other) : Matrix<T,N_DIMS> &
+operator=(Matrix<T,N_DIMS> && other) noexcept : Matrix<T,N_DIMS> &
..
+operator[](size_t idx1) : auto
..
+begin() const noexcept : const_iterator
+cbegin() const noexcept : const_iterator
+cend() const noexcept : const_iterator
+end() const noexcept : const_iterator
+get(IndexTypeConstShared idx) const noexcept : const T &
+set(IndexTypeConstShared idx, const T & value) noexcept : void
+set(IndexTypeConstShared idx, T && value) noexcept : void
+size() const noexcept : size_t
-swap(Matrix<T,N_DIMS> && other) noexcept : void
__
-_default : T
-_map : std::map<IndexType,T>
}
C_0000419081589640496338 ..|> C_0002212443975218405385
C_0000136384432202654581 - -> C_0000419081589640496338 : -_cell
C_0002263803576604671280 - -> C_0000419081589640496338 : -_cell
C_0002263803576604671280 ..|> C_0000136384432202654581
C_0000419081589640496338 <|- - C_0000163967524215595475

@enduml

PlantUML version 1.2022.7(Mon Aug 22 20:01:30 MSK 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: ru
Country: RU
--></g></svg>